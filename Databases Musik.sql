CREATE DATABASE PLAYLIST1;
USE PLAYLIST1;
CREATE TABLE PLAYLIST1.USERR(
	ID_USERR SMALLINT NOT NULL PRIMARY KEY,
    USERNAME VARCHAR(15) UNIQUE KEY,
    PASSWORDD VARCHAR(15),
    EMAIL VARCHAR(30),
    NAMA VARCHAR(30)
);
select* from USERR;
CREATE TABLE PLAYLIST1.TRIAL(
	ID_TRIAL SMALLINT NOT NULL PRIMARY KEY,
    ID_USERR SMALLINT,
    KET VARCHAR(15),
    USERR_USERNAME VARCHAR(15),
    FOREIGN KEY (ID_USERR) REFERENCES PLAYLIST1.USERR(ID_USERR)
);
CREATE TABLE PLAYLIST1.PREMIUM(
	ID_PREMIUM SMALLINT NOT NULL PRIMARY KEY,
    ID_USERR SMALLINT,
    KET VARCHAR(15),
    USERR_USERNAME VARCHAR(15),
    FOREIGN KEY (ID_USERR) REFERENCES PLAYLIST1.USERR(ID_USERR)
);
CREATE TABLE PLAYLIST1.PLAYLIST(
	ID_PLAYLIST SMALLINT NOT NULL PRIMARY KEY,
    ID_TRIAL SMALLINT,
    ID_PREMIUM SMALLINT,
    NAMA VARCHAR(30),
    TAGS VARCHAR(15),
    FOREIGN KEY (ID_TRIAL) REFERENCES PLAYLIST1.TRIAL(ID_TRIAL),
    FOREIGN KEY (ID_PREMIUM) REFERENCES PLAYLIST1.PREMIUM(ID_PREMIUM)
);
CREATE TABLE PLAYLIST1.SONG(
	ID_SONG SMALLINT NOT NULL PRIMARY KEY,
    ID_PLAYLIST SMALLINT,
    JUDUL VARCHAR(30),
    LIRIK VARCHAR(150),
    FOREIGN KEY (ID_PLAYLIST) REFERENCES PLAYLIST1.PLAYLIST(ID_PLAYLIST)
);
CREATE TABLE PLAYLIST1.ARTIST(
	ID_ARTIST SMALLINT NOT NULL PRIMARY KEY,
    ID_SONG SMALLINT,
    ID_ALBUMS SMALLINT,
    NAMA VARCHAR(30),
    NEGARA VARCHAR(30),
    FOREIGN KEY (ID_SONG) REFERENCES PLAYLIST1.SONG(ID_SONG)
);
CREATE TABLE PLAYLIST1.ALBUMS(
	ID_ALBUMS SMALLINT NOT NULL PRIMARY KEY,
    ID_SONG SMALLINT,
    ID_ARTIST SMALLINT,
    NAMA VARCHAR(30),
    TAHUN INT,
    FOREIGN KEY (ID_SONG) REFERENCES PLAYLIST1.SONG(ID_SONG),
    FOREIGN KEY (ID_ARTIST) REFERENCES PLAYLIST1.ARTIST(ID_ARTIST)
);
SHOW tables;
describe USERR;

INSERT INTO USERR(ID_USERR, USERNAME, PASSWORDD, EMAIL, NAMA)
VALUES (1,'RIYO', 'RAHASIA', 'TRIYO@GMAIL.COM', 'TRIYO ANGGORO'),
(2,'ADZIN', 'RAHASIA', 'ADZIN@GMAIL.COM', 'ADZINUL HAKIM'),
(3,'DIAS', 'RAHASIA', 'DIAS@GMAIL.COM', 'DIAS WARDHANA'),
(4,'DIAN', 'RAHASIA', 'DIAN@GMAIL.COM', 'DIAN NURITA');

DELETE FROM USERR
WHERE ID_USERR = 4;

SELECT * FROM USERR;

INSERT INTO TRIAL(ID_TRIAL, ID_USERR, KET)
VALUES (11, 2, 'TRIAL USER'),
(12, 4, 'TRIAL USER');

INSERT INTO TRIAL(ID_TRIAL, KET)
VALUES(13, 'BUKAN TRIAL');

DELETE FROM TRIAL
WHERE ID_TRIAL = 12;

SELECT * FROM TRIAL;

INSERT INTO PREMIUM(ID_PREMIUM, ID_USERR, KET)
VALUES (21, 1, 'PREMIUM USER'),
(22, 3, 'PREMIUM USER');

INSERT INTO PREMIUM(ID_PREMIUM, KET)
VALUES (23, 'BUKAN PREMIUM');

DELETE FROM PREMIUM
WHERE ID_PREMIUM = 21;

SELECT * FROM PREMIUM;

INSERT INTO SONG(ID_SONG, ID_PLAYLIST, JUDUL, LIRIK)
VALUES (31, 10, 'SEANDAINYA', 'SEANDAINYA KAU TAU, KU TAK INGIN KAU PERGI...'),
(32, 10,'PIJARAYA', 'PIJAR YAKIN KU AKAN TERANG PENDAR BERMAIN RIANG DI KALBUKU SENANG...'),
(33, 20,'ASMALIBRASI', 'ASMARA TELAH TERKALIBRASI FREKUENSI YANG SAMA...'),
(34, 20,'PACARKU', 'YANG PUTIH... PACARKU YANG PERTAMA...');

DELETE FROM SONG
WHERE ID_SONG = 4;

SELECT * FROM SONG;

INSERT INTO PLAYLIST(ID_PLAYLIST, ID_TRIAL, ID_PREMIUM, NAMA, TAGS)
VALUES (10, 11, '23', 'MY MUSIC', 'POP, INDIE, JAZZ'),
(20, 12, '23', 'MY PLAY', 'POP, REGGAE'),
(30, '13', 21, 'MY JAMMING', 'INDIE, JAZZ');

DELETE FROM PLAYLIST
WHERE ID_PLAYLIST = 30;

SELECT * FROM PLAYLIST;

INSERT INTO ARTIST(ID_ARTIST, ID_SONG, ID_ALBUMS, NAMA, NEGARA)
VALUES (51, 31, 91, 'VIERRATALE', 'INDONESIA'),
(52, 32, 92, 'SOEGI BORNEAN', 'INDONESIA'),
(53, 33, 93, 'SOEGI BORNEAN', 'INDONESIA'),
(54, 34, 94, 'COZY REPUBLIK', 'INDONESIA');

DELETE FROM ARTIST
WHERE ID_ARTIST = 51;

SELECT * FROM ARTIST;

INSERT INTO ALBUMS(ID_ALBUMS, ID_SONG, ID_ARTIST, NAMA, TAHUN)
VALUES(91, 31, 51, 'MENCARI WARNA', 2020),
(92, 32, 52, 'TERBANG KE LANGIT', 2012),
(93, 33, 53, 'INI RUMAH', 2021),
(94, 34, 54, 'INI REGGAE', 2007);

SELECT * FROM ALBUMS;

CREATE VIEW USERR_TRIAL AS 
SELECT NAMA, USERNAME, T.KET AS KET_TRIAL FROM USERR U, TRIAL T
WHERE U.ID_USERR = T.ID_USERR; 

SELECT * FROM USERR_TRIAL;

CREATE VIEW USERR_PREMIUM AS
SELECT NAMA, USERNAME, P.KET AS KET_PREM FROM USERR U, PREMIUM P
WHERE U.ID_USERR = P.ID_USERR;

SELECT * FROM USERR_PREMIUM;

CREATE VIEW PLAYLIST_SONG AS
SELECT NAMA, TAGS, JUDUL, LIRIK FROM PLAYLIST L, SONG S
WHERE L.ID_PLAYLIST = S.ID_PLAYLIST;

SELECT * FROM PLAYLIST_SONG;

CREATE VIEW SONG_ARTIST AS
SELECT NAMA, NEGARA, JUDUL, LIRIK FROM SONG S, ARTIST A
WHERE S.ID_SONG = A.ID_SONG;

SELECT * FROM SONG_ARTIST;

CREATE VIEW SONG_ALBUMS AS
SELECT NAMA, TAHUN, JUDUL, LIRIK FROM SONG S, ALBUMS A
WHERE S.ID_SONG = A.ID_SONG;

SELECT * FROM SONG_ALBUMS;

CREATE VIEW ARTIST_ALBUMS_SONG AS
SELECT A.NAMA AS ARTIST, B.NAMA AS ALBUMS, TAHUN, JUDUL, LIRIK FROM ARTIST A, ALBUMS B, SONG S
WHERE S.ID_SONG = A.ID_SONG AND S.ID_SONG = B.ID_SONG;

SELECT * FROM ARTIST_ALBUMS_SONG;

CREATE VIEW ARTIST_ALBUMS_SONG_PLAYLIST AS
SELECT A.NAMA AS ARTIST, B.NAMA AS ALBUMS, TAHUN, JUDUL, LIRIK, C.NAMA AS PLAYLIST, TAGS  FROM ARTIST A, ALBUMS B, SONG S, PLAYLIST C
WHERE S.ID_SONG = A.ID_SONG AND S.ID_SONG = B.ID_SONG AND S.ID_PLAYLIST = C.ID_PLAYLIST;

SELECT * FROM ARTIST_ALBUMS_SONG_PLAYLIST;

SELECT ARTIST, JUDUL, TAHUN
FROM ARTIST_ALBUMS_SONG_PLAYLIST
GROUP BY TAHUN;

CREATE VIEW ROCF AS
SELECT CONCAT(A.NAMA, ' - ',JUDUL) AS SONG_ARTIST, TAGS FROM ARTIST A, SONG S, PLAYLIST C
WHERE S.ID_SONG = A.ID_SONG AND S.ID_PLAYLIST = C.ID_PLAYLIST;

SELECT * FROM ROCF;

SELECT NAMA AS PLAYLIST, (SELECT COUNT(NEGARA) AS JUMLAH_NEGARA
		FROM ARTIST
        WHERE NEGARA = 'INDONESIA' ) AS DALAM_NEGERI,
        (SELECT COUNT(NEGARA) AS JUMLAH_NEGARA
		FROM ARTIST
        WHERE NEGARA = 'ASING' ) AS LUAR_NEGERI
FROM PLAYLIST1.PLAYLIST;